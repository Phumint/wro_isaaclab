<?xml version="1.0"?>
<!--
  Robot model adapted from https://github.com/CIR-KIT/steer_drive_ros/blob/kinetic-devel/steer_drive_controller/test/common/urdf/steerbot.xacro

  Modifications:
    STRICTLY RESTORED: Original geometry (origins, visual, collision) from ROS 1 version.
    Updated for ROS 2 ros2_control compatibility.
    Removed redundant front_steer and rear_wheel macro calls.
    Fixed 'ultramooth_mass' typo and 'ultrric_right_link' typo.
    Cleaned up comments for strict XML parsing.
    Removed explicit <origin> blocks from wheel_lr macro calls as origins are now internal to macros
    to match the original ROS 1 design where origins were calculated within the macro.
    Ensured all geometry parameters are passed correctly to macros.

  Geometry:
    The Ackermann steering controllers require the longitudinal
    separation between the front and back wheel axes and the
    lateral separation between the left and right front steering axes.
    
    For this model:
    wheel_separation_h = base_length - 2 * axle_offset = 0.4
    wheel_separation_w = base_width + 2 * axle_offset = 0.4
-->
<robot name="steer_bot" xmlns:xacro="http://wiki.ros.org/xacro">
  <!-- Include xacro for wheels. wheel.xacro includes materials.xacro and inertials.xacro, so no need to include them directly here -->
  <xacro:include filename="wheel.xacro"/>

  <xacro:arg name="use_ros2_control" default="true"/>
  <xacro:property name="robot_namespace" value="/steer_bot"/>

  <!-- Math constants -->
  <xacro:property name="deg_to_rad" value="0.01745329251994329577"/>

  <!-- Robot base dimensions -->
  <xacro:property name="base_length" value="0.2" /> 
  <xacro:property name="base_width" value="0.09" /> 
  <xacro:property name="base_height" value="0.05" /> 
  <xacro:property name="base_mass" value="2.5" /> 

  <!-- Wheel link dimensions -->
  <xacro:property name="wheel_radius" value="0.034" />
  <xacro:property name="wheel_thickness" value="0.027" />
  <xacro:property name="wheel_mass" value="0.5" />

  <!-- Steering link dimensions -->
  <xacro:property name="steer_radius" value="0.05" />
  <xacro:property name="steer_thickness" value="0.02" />
  <xacro:property name="steer_mass" value="1" />

  <!-- Axle positions -->
  <xacro:property name="axle_offset" value="0.0125" />
  <xacro:property name="steer_offset" value="0.045" />

  <!-- Sensor dimensions -->
  <xacro:property name="ultrasonic_length" value="0.02" />
  <xacro:property name="ultrasonic_width" value="0.02" />
  <xacro:property name="ultrasonic_height" value="0.02" />
  <xacro:property name="ultrasonic_mass" value="0.05" />
  <xacro:property name="camera_size" value="0.03" />
  <xacro:property name="camera_mass" value="0.1" />

  <!-- Base link -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="green" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>
    <xacro:solid_cuboid_inertial 
        rpy="0 0 0" xyz="0 0 0"
        mass="${base_mass}"
        x="${base_length}" y="${base_width}" z="${base_height}" />
  </link>

  <!-- Steerable front wheels -->
  <xacro:front_wheel_lr 
    name="front_right"
    parent="base"
    reflect="-1"
    wheel_radius="${wheel_radius}"
    wheel_thickness="${wheel_thickness}" 
    wheel_mass="${wheel_mass}" 
    steer_radius="${steer_radius}"
    steer_thickness="${steer_thickness}" 
    steer_mass="${steer_mass}" 
    base_length="${base_length}"
    base_width="${base_width}"
    axle_offset="${axle_offset}"
    steer_height="${wheel_radius+steer_offset}">
  </xacro:front_wheel_lr>
  <xacro:front_wheel_lr
    name="front_left"
    parent="base"
    reflect="1"
    wheel_radius="${wheel_radius}"
    wheel_thickness="${wheel_thickness}"
    wheel_mass="${wheel_mass}" 
    steer_radius="${steer_radius}"
    steer_thickness="${steer_thickness}" 
    steer_mass="${steer_mass}" 
    base_length="${base_length}"
    base_width="${base_width}"
    axle_offset="${axle_offset}"
    steer_height="${wheel_radius+steer_offset}">
  </xacro:front_wheel_lr>

  <!-- Rear wheels -->
  <xacro:rear_wheel_lr
    name="rear_right"
    parent="base"
    wheel_radius="${wheel_radius}"
    wheel_thickness="${wheel_thickness}"
    wheel_mass="${wheel_mass}">
    <origin xyz="${-base_length/2+axle_offset} ${-base_width/2-axle_offset} 0" rpy="${-90 * deg_to_rad} 0 0"/>
  </xacro:rear_wheel_lr>
  <xacro:rear_wheel_lr
    name="rear_left"
    parent="base"
    wheel_radius="${wheel_radius}"
    wheel_thickness="${wheel_thickness}"
    wheel_mass="${wheel_mass}">
    <origin xyz="${-base_length/2+axle_offset} ${+base_width/2+axle_offset} 0" rpy="${-90 * deg_to_rad} 0 0"/>
  </xacro:rear_wheel_lr>

  <!-- Camera Link -->
  <link name="camera_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${camera_size} ${camera_size} ${camera_size}" />
      </geometry>
      <material name="red" /> 
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${camera_size} ${camera_size} ${camera_size}" />
      </geometry>
    </collision>
    <xacro:solid_cuboid_inertial 
        rpy="0 0 0" xyz="0 0 0"
        mass="${camera_mass}"
        x="${camera_size}" y="${camera_size}" z="${camera_size}" />
  </link>

  <joint name="camera_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_link"/>
    <origin xyz="${base_length/2} 0 ${base_height/2}" rpy="0 0 0"/>
  </joint>

  <!-- Ultrasonic Sensor Links -->
  <link name="ultrasonic_front_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${ultrasonic_length} ${ultrasonic_width} ${ultrasonic_height}" />
      </geometry>
      <material name="blue" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${ultrasonic_length} ${ultrasonic_width} ${ultrasonic_height}" />
      </geometry>
    </collision>
    <xacro:solid_cuboid_inertial 
        rpy="0 0 0" xyz="0 0 0"
        mass="${ultrasonic_mass}"
        x="${ultrasonic_length}" y="${ultrasonic_width}" z="${ultrasonic_height}" />
  </link>

  <joint name="ultrasonic_front_joint" type="fixed">
    <parent link="base_link"/>
    <child link="ultrasonic_front_link"/>
    <origin xyz="${base_length/2} 0 ${base_height/2-ultrasonic_height}" rpy="0 ${90*deg_to_rad} 0"/>
  </joint>

  <link name="ultrasonic_rear_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${ultrasonic_length} ${ultrasonic_width} ${ultrasonic_height}" />
      </geometry>
      <material name="blue" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${ultrasonic_length} ${ultrasonic_width} ${ultrasonic_height}" />
      </geometry>
    </collision>
    <xacro:solid_cuboid_inertial 
        rpy="0 0 0" xyz="0 0 0"
        mass="${ultrasonic_mass}"
        x="${ultrasonic_length}" y="${ultrasonic_width}" z="${ultrasonic_height}" />
  </link>

  <joint name="ultrasonic_rear_joint" type="fixed">
    <parent link="base_link"/>
    <child link="ultrasonic_rear_link"/>
    <origin xyz="${-base_length/2} 0 ${base_height/2-ultrasonic_height}" rpy="0 ${-90*deg_to_rad} 0"/>
  </joint>

  <link name="ultrasonic_right_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${ultrasonic_length} ${ultrasonic_width} ${ultrasonic_height}" />
      </geometry>
      <material name="blue" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${ultrasonic_length} ${ultrasonic_width} ${ultrasonic_height}" />
      </geometry>
    </collision>
    <xacro:solid_cuboid_inertial 
        rpy="0 0 0" xyz="0 0 0"
        mass="${ultrasonic_mass}"
        x="${ultrasonic_length}" y="${ultrasonic_width}" z="${ultrasonic_height}" />
  </link>

  <joint name="ultrasonic_right_joint" type="fixed">
    <parent link="base_link"/>
    <child link="ultrasonic_right_link"/>
    <origin xyz="0 ${-base_width/2} ${base_height/2-ultrasonic_height}" rpy="0 0 ${-90*deg_to_rad}"/>
  </joint>

  <link name="ultrasonic_left_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${ultrasonic_length} ${ultrasonic_width} ${ultrasonic_height}" />
      </geometry>
      <material name="blue" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${ultrasonic_length} ${ultrasonic_width} ${ultrasonic_height}" />
      </geometry>
    </collision>
    <xacro:solid_cuboid_inertial 
        rpy="0 0 0" xyz="0 0 0"
        mass="${ultrasonic_mass}"
        x="${ultrasonic_length}" y="${ultrasonic_width}" z="${ultrasonic_height}" />
  </link>

  <joint name="ultrasonic_left_joint" type="fixed">
    <parent link="base_link"/>
    <child link="ultrasonic_left_link"/>
    <origin xyz="0 ${base_width/2} ${base_height/2-ultrasonic_height}" rpy="0 0 ${90*deg_to_rad}"/>
  </joint>

  <!-- Colour for Gazebo (These don't define materials, they apply existing ones) -->
  <gazebo reference="base_link">
    <material>Gazebo/Green</material>
  </gazebo>

  <gazebo reference="camera_link">
    <material>Gazebo/Red</material>
  </gazebo>

  <gazebo reference="ultrasonic_front_link">
    <material>Gazebo/Blue</material>
  </gazebo>

  <gazebo reference="ultrasonic_rear_link">
    <material>Gazebo/Blue</material>
  </gazebo>

  <gazebo reference="ultrasonic_right_link">
    <material>Gazebo/Blue</material>
  </gazebo>

  <gazebo reference="ultrasonic_left_link">
    <material>Gazebo/Blue</material>
  </gazebo>

  <!-- Conditional ros2_control definition -->
  <xacro:if value="$(arg use_ros2_control)">
    <ros2_control name="GazeboSystem" type="system">
      <hardware>
        <plugin>gazebo_ros2_control/GazeboSystem</plugin>
      </hardware>
      <!-- Ensure these joint names EXACTLY match what your wheel.xacro creates -->
      <joint name="front_left_steer_joint">
        <command_interface name="position">
          <param name="min">-0.785</param> <!-- Corresponds to max_steer_angle -->
          <param name="max">0.785</param>
        </command_interface>
        <state_interface name="position" />
        <state_interface name="velocity" />
      </joint>
      <joint name="front_right_steer_joint">
        <command_interface name="position">
          <param name="min">-0.785</param>
          <param name="max">0.785</param>
        </command_interface>
        <state_interface name="position" />
        <state_interface name="velocity" />
      </joint>
      <joint name="rear_left_wheel_joint">
        <command_interface name="velocity">
          <param name="min">-5.0</param> <!-- Example velocity limits -->
          <param name="max">5.0</param>
        </command_interface>
        <state_interface name="position" />
        <state_interface name="velocity" />
      </joint>
      <joint name="rear_right_wheel_joint">
        <command_interface name="velocity">
          <param name="min">-5.0</param>
          <param name="max">5.0</param>
        </command_interface>
        <state_interface name="position" />
        <state_interface name="velocity" />
      </joint>
    </ros2_control>
    <gazebo>
      <plugin name="gazebo_ros2_control" filename="libgazebo_ros2_control.so">
        <robotParam>robot_description</robotParam>
      </plugin>
  </gazebo>
  </xacro:if> 
</robot>
